{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React-Redux\\\\src\\\\search.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { QUERY } from './globals';\nimport { changeQuery } from './actions';\nimport store from './store';\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeHandler = event => {\n      this.setState({\n        movieQuery: event.target.value\n      });\n    };\n\n    this.sendQuery = e => {\n      if (e.keyCode === undefined || e.keyCode === 13) {\n        this.props.dispatch(changeQuery(this.state.movieQuery)); //Save the latest searched movie in local so that it can be displayed while switching back from favorites or to watch sections\n\n        sessionStorage.setItem(QUERY, this.state.movieQuery);\n        console.log(\"new query: \" + this.props.query);\n      }\n    };\n\n    this.state = {\n      movieQuery: this.props.query\n    };\n  }\n\n  componentDidMount() {\n    //Get back the saved searched expression if any\n    const movieQuery = sessionStorage.getItem(QUERY);\n    if (movieQuery !== \"\" && movieQuery !== null) this.props.dispatch(changeQuery(movieQuery));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"search-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"search\",\n      placeholder: \"Which movie you are looking for?\",\n      onChange: e => {\n        this.changeHandler(e);\n      },\n      onKeyDown: e => {\n        this.sendQuery(e);\n      },\n      value: this.state.movieQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.sendQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Find My Movie!\"));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    query: state.query\n  };\n}\n\nexport default connect(mapStateToProps)(Search);","map":{"version":3,"sources":["E:\\MovieBuff_React-Redux\\src\\search.js"],"names":["React","connect","QUERY","changeQuery","store","Search","Component","constructor","props","changeHandler","event","setState","movieQuery","target","value","sendQuery","e","keyCode","undefined","dispatch","state","sessionStorage","setItem","console","log","query","componentDidMount","getItem","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,QAAoB,WAApB;AACA,SAAQC,WAAR,QAA0B,WAA1B;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,MAAN,SAAqBL,KAAK,CAACM,SAA3B,CAAqC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAcnBC,aAdmB,GAcFC,KAAD,IAAW;AACzB,WAAKC,QAAL,CAAe;AACbC,QAAAA,UAAU,EAAEF,KAAK,CAACG,MAAN,CAAaC;AADZ,OAAf;AAGD,KAlBkB;;AAAA,SAmBnBC,SAnBmB,GAmBNC,CAAD,IAAO;AACjB,UAAIA,CAAC,CAACC,OAAF,KAAcC,SAAd,IAA2BF,CAAC,CAACC,OAAF,KAAc,EAA7C,EAAiD;AAC/C,aAAKT,KAAL,CAAWW,QAAX,CAAoBhB,WAAW,CAAC,KAAKiB,KAAL,CAAWR,UAAZ,CAA/B,EAD+C,CAE/C;;AACAS,QAAAA,cAAc,CAACC,OAAf,CAAuBpB,KAAvB,EAA8B,KAAKkB,KAAL,CAAWR,UAAzC;AACAW,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB,KAAKhB,KAAL,CAAWiB,KAAvC;AACD;AACF,KA1BkB;;AAEjB,SAAKL,KAAL,GAAa;AACXR,MAAAA,UAAU,EAAE,KAAKJ,KAAL,CAAWiB;AADZ,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMd,UAAU,GAAGS,cAAc,CAACM,OAAf,CAAuBzB,KAAvB,CAAnB;AACA,QAAGU,UAAU,KAAK,EAAf,IAAqBA,UAAU,KAAK,IAAvC,EACE,KAAKJ,KAAL,CAAWW,QAAX,CAAoBhB,WAAW,CAACS,UAAD,CAA/B;AACH;;AAgBDgB,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,QAAxB;AAAiC,MAAA,WAAW,EAAC,kCAA7C;AAAgF,MAAA,QAAQ,EAAGZ,CAAD,IAAO;AAAC,aAAKP,aAAL,CAAmBO,CAAnB;AAAsB,OAAxH;AAA0H,MAAA,SAAS,EAAGA,CAAD,IAAK;AAAC,aAAKD,SAAL,CAAeC,CAAf;AAAkB,OAA7J;AAA+J,MAAA,KAAK,EAAE,KAAKI,KAAL,CAAWR,UAAjL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKG,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CADF;AAOD;;AArCkC;;AAwCrC,SAASc,eAAT,CAAyBT,KAAzB,EAAgC;AAC9B,SAAO;AACLK,IAAAA,KAAK,EAAEL,KAAK,CAACK;AADR,GAAP;AAGD;;AAED,eAAexB,OAAO,CAAC4B,eAAD,CAAP,CAAyBxB,MAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {QUERY} from './globals';\r\nimport {changeQuery} from './actions';\r\nimport store from './store';\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      movieQuery: this.props.query,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Get back the saved searched expression if any\r\n    const movieQuery = sessionStorage.getItem(QUERY);\r\n    if(movieQuery !== \"\" && movieQuery !== null)\r\n      this.props.dispatch(changeQuery(movieQuery));\r\n  }\r\n\r\n  changeHandler = (event) => {\r\n    this.setState ({\r\n      movieQuery: event.target.value\r\n    });\r\n  }\r\n  sendQuery = (e) => {\r\n    if (e.keyCode === undefined || e.keyCode === 13) {\r\n      this.props.dispatch(changeQuery(this.state.movieQuery));\r\n      //Save the latest searched movie in local so that it can be displayed while switching back from favorites or to watch sections\r\n      sessionStorage.setItem(QUERY, this.state.movieQuery);\r\n      console.log(\"new query: \" + this.props.query);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"search-container\">\r\n        <input type=\"text\" name=\"search\" placeholder=\"Which movie you are looking for?\" onChange={(e) => {this.changeHandler(e)}} onKeyDown={(e)=>{this.sendQuery(e)}} value={this.state.movieQuery}/>\r\n        <button onClick={this.sendQuery} >Find My Movie!</button>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    query: state.query\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Search);\r\n"]},"metadata":{},"sourceType":"module"}