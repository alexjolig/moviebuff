{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React\\\\src\\\\main-table.js\";\nimport React from 'react';\nimport addMovie from './globals';\nimport Pagination from './pagination';\nimport { FAV_MOVIE_LIST, TO_WATCH_MOVIE_LIST, API_KEY, CURRENT_PAGE, movieExists } from './globals';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changePage = newPage => {\n      this.setState({\n        currentPage: newPage\n      });\n      const movieQuery = sessionStorage.setItem(CURRENT_PAGE);\n    };\n\n    this.state = {\n      movies: [],\n      isAnyData: false,\n      finalQuery: this.props.query,\n      currentPage: 1,\n      pageCount: 0\n    };\n  }\n\n  getMovies() {\n    let _this$state = this.state,\n        finalQuery = _this$state.finalQuery,\n        movies = _this$state.movies,\n        pageCount = _this$state.pageCount,\n        currentPage = _this$state.currentPage,\n        isAnyData = _this$state.isAnyData;\n    if (finalQuery === \"\") return;\n    fetch('https://api.themoviedb.org/3/search/movie?query=' + finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage).then(res => res.json()).then(data => {\n      movies = data.results;\n      pageCount = data.total_pages;\n      isAnyData = movies.length > 0;\n      this.setState({\n        movies: movies,\n        pageCount: pageCount,\n        isAnyData: isAnyData\n      });\n    }).catch(console.log);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (previousState.finalQuery !== this.state.finalQuery) this.setState({\n      currentPage: 1\n    }, () => {\n      //get back to page number one when searching for a new movie\n      this.getMovies();\n    });else if (previousState.currentPage !== this.state.currentPage) {\n      this.getMovies();\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      finalQuery: props.query\n    }; //return{finalQuery: state.finalQuery !== \"\" && props.query === \"\" ? state.finalQuery : props.query};\n  }\n\n  addToList(id, title, relDate, list) {\n    addMovie(id, title, relDate, list);\n    this.forceUpdate();\n  }\n\n  render() {\n    if (this.state.isAnyData) return React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"Release Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Favorite\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"To Watch\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, this.state.movies.map(row => React.createElement(\"tr\", {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, row.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, row.release_date), React.createElement(\"td\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: (movieExists(row.id, FAV_MOVIE_LIST) ? \"fas\" : \"far\") + \" fa-star\",\n      onClick: () => {\n        this.addToList(row.id, row.title, row.release_date, FAV_MOVIE_LIST);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: movieExists(row.id, TO_WATCH_MOVIE_LIST) ? \"fas fa-eye\" : \"far fa-eye-slash\",\n      onClick: () => {\n        this.addToList(row.id, row.title, row.release_date, TO_WATCH_MOVIE_LIST);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })))))), React.createElement(Pagination, {\n      currentPage: this.state.currentPage,\n      pageCount: this.state.pageCount,\n      parentCallback: this.changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }));else {\n      return React.createElement(\"div\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"no-results no-selection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Nothing To Watch!\"));\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["E:\\MovieBuff_React\\src\\main-table.js"],"names":["React","addMovie","Pagination","FAV_MOVIE_LIST","TO_WATCH_MOVIE_LIST","API_KEY","CURRENT_PAGE","movieExists","Table","Component","constructor","props","changePage","newPage","setState","currentPage","movieQuery","sessionStorage","setItem","state","movies","isAnyData","finalQuery","query","pageCount","getMovies","fetch","then","res","json","data","results","total_pages","length","catch","console","log","componentDidMount","componentDidUpdate","previousProps","previousState","getDerivedStateFromProps","addToList","id","title","relDate","list","forceUpdate","render","map","row","release_date"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport addMovie from './globals';\r\nimport Pagination from './pagination';\r\nimport {FAV_MOVIE_LIST, TO_WATCH_MOVIE_LIST, API_KEY, CURRENT_PAGE, movieExists} from './globals';\r\n\r\nclass Table extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        movies: [],\r\n        isAnyData:false,\r\n        finalQuery: this.props.query,\r\n        currentPage: 1,\r\n    \t\tpageCount: 0,\r\n    }\r\n  }\r\n\r\n  getMovies() {\r\n    let {finalQuery, movies, pageCount, currentPage, isAnyData} = this.state;\r\n    if(finalQuery === \"\") return;\r\n    fetch('https://api.themoviedb.org/3/search/movie?query='+ finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      movies = data.results;\r\n      pageCount = data.total_pages;\r\n      isAnyData = movies.length > 0;\r\n      this.setState({movies: movies, pageCount:pageCount, isAnyData: isAnyData});\r\n    })\r\n    .catch(console.log);\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.getMovies();\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    if(previousState.finalQuery !== this.state.finalQuery)\r\n      this.setState({currentPage:1}, ()=> { //get back to page number one when searching for a new movie\r\n        this.getMovies();\r\n      });\r\n    else if(previousState.currentPage !== this.state.currentPage){\r\n      this.getMovies();\r\n    }\r\n  }\r\n  static getDerivedStateFromProps(props, state) {\r\n    return{finalQuery: props.query};\r\n    //return{finalQuery: state.finalQuery !== \"\" && props.query === \"\" ? state.finalQuery : props.query};\r\n  }\r\n\r\n  addToList(id, title, relDate, list){\r\n    addMovie(id, title, relDate, list);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  changePage = (newPage) => {\r\n    this.setState({currentPage: newPage});\r\n    const movieQuery = sessionStorage.setItem(CURRENT_PAGE);\r\n  }\r\n\r\n  render(){\r\n    if(this.state.isAnyData)\r\n      return (\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Release Date</th>\r\n                <th>Favorite</th>\r\n                <th>To Watch</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.movies.map((row) => (\r\n              <tr key={row.id}>\r\n                <td>{row.title}</td>\r\n                <td>{row.release_date}</td>\r\n                <td className=\"icon\"><i className={(movieExists(row.id, FAV_MOVIE_LIST) ? \"fas\" : \"far\") + \" fa-star\"} onClick={()=>{this.addToList(row.id, row.title, row.release_date, FAV_MOVIE_LIST)}}></i></td>\r\n                <td className=\"icon\"><i className={movieExists(row.id, TO_WATCH_MOVIE_LIST) ? \"fas fa-eye\" : \"far fa-eye-slash\"} onClick={()=>{this.addToList(row.id, row.title, row.release_date, TO_WATCH_MOVIE_LIST)}}></i></td>\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n          <Pagination currentPage={this.state.currentPage} pageCount={this.state.pageCount} parentCallback = {this.changePage}/>\r\n        </div>\r\n\r\n      );\r\n    else {\r\n      return (\r\n        <div className=\"table-container\">\r\n          <h2 className=\"no-results no-selection\">Nothing To Watch!</h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}