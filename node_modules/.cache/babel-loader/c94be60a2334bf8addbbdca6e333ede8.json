{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React\\\\src\\\\pagination.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: this.props.currentPage,\n      postsPerPage: 20,\n      //It has been set from the used API, Nothing I can modify\n      pageCount: this.props.pageCount,\n      pageNumbers2Display: 5 //Set an odd number > 1\n\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.changePage = this.changePage.bind(this);\n  } //Handle click on page number list\n\n\n  handleClick(event) {\n    this.setState({\n      currentPage: Number(event.currentTarget.id) //using event.target would reference to child tag (a). So use event.currentTarget\n\n    });\n    event.preventDefault();\n  } //Handle next and previous buttons\n\n\n  changePage(event) {\n    event.preventDefault();\n    console.log(\"id: \" + event.currentTarget.id);\n    let newPage = 1;\n\n    if (event.currentTarget.id === 'p-page') {\n      //previous\n      newPage = this.state.currentPage > 1 ? this.state.currentPage - 1 : 1;\n      this.setState({\n        currentPage: newPage\n      });\n    } else if (event.currentTarget.id === 'n-page') {\n      //next\n      newPage = this.state.currentPage < this.state.pageCount ? this.state.currentPage + 1 : this.state.pageCount;\n      this.setState({\n        currentPage: newPage\n      });\n    } else if (event.currentTarget.id === 'f-page') {\n      //first\n      newPage = 1;\n      this.setState({\n        currentPage: newPage\n      });\n    } else if (event.currentTarget.id === 'l-page') {\n      //last\n      newPage = this.state.pageCount;\n      this.setState({\n        currentPage: newPage\n      });\n    } else if (event.currentTarget.id === 'e-dots') {\n      //last dots\n      let extraPages2Jump = 3;\n      let page2JumpFrom = this.state.currentPage <= this.state.pageNumbers2Display ? this.state.pageNumbers2Display : this.state.currentPage + 2;\n      newPage = page2JumpFrom + extraPages2Jump <= this.state.pageCount ? page2JumpFrom + extraPages2Jump : this.state.currentPage;\n      this.setState({\n        currentPage: newPage\n      });\n    } else {\n      //first dots 'f-dots'\n      let extraPages2Jump = 3;\n      let page2JumpFrom = this.state.currentPage >= this.state.pageCount - (this.state.pageNumbers2Display - 1) ? this.state.pageCount - (this.state.pageNumbers2Display - 1) : this.state.currentPage - 2;\n      newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\n      this.setState({\n        currentPage: newPage\n      });\n    }\n  }\n\n  prevPage() {\n    return React.createElement(\"li\", {\n      key: \"p-page\",\n      id: \"p-page\",\n      onClick: this.changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"<\"));\n  }\n\n  nextPage() {\n    return React.createElement(\"li\", {\n      key: \"n-page\",\n      id: \"n-page\",\n      onClick: this.changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \">\"));\n  }\n\n  render() {\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          postsPerPage = _this$state.postsPerPage,\n          pageCount = _this$state.pageCount,\n          pageNumbers2Display = _this$state.pageNumbers2Display; //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\n    //cause its pointless to show extra buttons in this case scenarios\n\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\n\n    function getPageNumberList() {\n      const list = [];\n\n      if (shouldDisplayExtraButtons) {\n        let i = currentPage <= pageNumbers2Display ? 1 : currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) : currentPage - Math.floor(pageNumbers2Display / 2);\n        let toNumber = i + pageNumbers2Display;\n\n        for (i; i < toNumber; i++) {\n          list.push(i);\n        }\n      } else {\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\n          list.push(i);\n        }\n      }\n\n      return list;\n    }\n\n    const RenderPageNumbers = () => {\n      return getPageNumberList().map(number => {\n        return React.createElement(\"li\", {\n          className: currentPage === number ? 'active' : '',\n          key: number,\n          id: number,\n          onClick: this.handleClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118\n          },\n          __self: this\n        }, number));\n      });\n    };\n\n    class FirstPage extends React.Component {\n      render() {\n        if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n          return React.createElement(\"li\", {\n            className: currentPage === 1 ? ' active' : '',\n            key: \"f-page\",\n            id: \"f-page\",\n            onClick: this.props.changeP,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132\n            },\n            __self: this\n          }, \"1\"));\n        } else return null;\n      }\n\n    }\n\n    FirstPage.propTypes = {\n      changeP: PropTypes.func\n    };\n\n    class LastPage extends React.Component {\n      render() {\n        if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n          return React.createElement(\"li\", {\n            className: currentPage === pageCount ? ' active' : '',\n            key: \"l-page\",\n            id: \"l-page\",\n            onClick: this.props.changeP,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }, pageCount));\n        } else return null;\n      }\n\n    }\n\n    LastPage.propTypes = {\n      changeP: PropTypes.func\n    };\n\n    class StartDots extends React.Component {\n      render() {\n        if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n          return React.createElement(\"li\", {\n            key: \"sdots\",\n            id: \"sdots\",\n            onClick: this.props.changeP,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 167\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168\n            },\n            __self: this\n          }, \"...\"));\n        } else return null;\n      }\n\n    }\n\n    StartDots.propTypes = {\n      changeP: PropTypes.func\n    };\n\n    class EndDots extends React.Component {\n      render() {\n        if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n          return React.createElement(\"li\", {\n            key: \"edots\",\n            id: \"edots\",\n            onClick: this.props.changeP,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185\n            },\n            __self: this\n          }, \"...\"));\n        } else return null;\n      }\n\n    }\n\n    EndDots.propTypes = {\n      changeP: PropTypes.func\n    };\n\n    if (this.state.pageCount > 1) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, this.prevPage(), React.createElement(FirstPage, {\n        changeP: this.props.changeP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(StartDots, {\n        changeP: this.props.changeP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(RenderPageNumbers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }), React.createElement(EndDots, {\n        changeP: this.props.changeP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }), React.createElement(LastPage, {\n        changeP: this.props.changeP,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }), this.nextPage()));\n    } else return null;\n  }\n\n}\n\nexport default Pagination;","map":{"version":3,"sources":["E:\\MovieBuff_React\\src\\pagination.js"],"names":["React","PropTypes","Pagination","Component","constructor","props","state","currentPage","postsPerPage","pageCount","pageNumbers2Display","handleClick","bind","changePage","event","setState","Number","currentTarget","id","preventDefault","console","log","newPage","extraPages2Jump","page2JumpFrom","prevPage","nextPage","render","shouldDisplayExtraButtons","getPageNumberList","list","i","Math","floor","toNumber","push","ceil","RenderPageNumbers","map","number","FirstPage","changeP","propTypes","func","LastPage","StartDots","EndDots"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: this.props.currentPage,\r\n      postsPerPage: 20, //It has been set from the used API, Nothing I can modify\r\n      pageCount: this.props.pageCount,\r\n      pageNumbers2Display: 5, //Set an odd number > 1\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.changePage = this.changePage.bind(this);\r\n  }\r\n\r\n  //Handle click on page number list\r\n  handleClick(event) {\r\n    this.setState({\r\n      currentPage: Number(event.currentTarget.id) //using event.target would reference to child tag (a). So use event.currentTarget\r\n    });\r\n    event.preventDefault();\r\n  }\r\n\r\n  //Handle next and previous buttons\r\n  changePage (event) {\r\n    event.preventDefault();\r\n    console.log(\"id: \" + event.currentTarget.id);\r\n    let newPage = 1;\r\n    if(event.currentTarget.id === 'p-page') { //previous\r\n      newPage = this.state.currentPage > 1 ? this.state.currentPage - 1 : 1;\r\n      this.setState({\r\n        currentPage: newPage\r\n      });\r\n    }\r\n    else if(event.currentTarget.id === 'n-page') { //next\r\n      newPage = this.state.currentPage < this.state.pageCount ? this.state.currentPage + 1 : this.state.pageCount;\r\n      this.setState({\r\n        currentPage: newPage\r\n      });\r\n    }\r\n    else if(event.currentTarget.id === 'f-page') { //first\r\n      newPage = 1;\r\n      this.setState({\r\n        currentPage: newPage\r\n      });\r\n    }\r\n    else if(event.currentTarget.id === 'l-page') { //last\r\n      newPage = this.state.pageCount;\r\n      this.setState({\r\n        currentPage: newPage\r\n      });\r\n    }\r\n    else if(event.currentTarget.id === 'e-dots') { //last dots\r\n      let extraPages2Jump = 3;\r\n      let page2JumpFrom = this.state.currentPage <= this.state.pageNumbers2Display ? this.state.pageNumbers2Display : this.state.currentPage + 2;\r\n      newPage = page2JumpFrom + extraPages2Jump <= this.state.pageCount ? page2JumpFrom + extraPages2Jump : this.state.currentPage;\r\n      this.setState({\r\n        currentPage: newPage\r\n      });\r\n    }\r\n    else { //first dots 'f-dots'\r\n      let extraPages2Jump = 3;\r\n      let page2JumpFrom = this.state.currentPage >= this.state.pageCount - (this.state.pageNumbers2Display - 1) ? this.state.pageCount - (this.state.pageNumbers2Display - 1) :  this.state.currentPage - 2;\r\n      newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\r\n      this.setState({\r\n        currentPage: newPage\r\n      });\r\n    }\r\n  }\r\n\r\n  prevPage() {\r\n    return (\r\n      <li key=\"p-page\" id=\"p-page\" onClick={this.changePage}>\r\n        <a href=\"#\">&lt;</a>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  nextPage() {\r\n    return (\r\n      <li key=\"n-page\" id=\"n-page\" onClick={this.changePage}>\r\n        <a href=\"#\">&gt;</a>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const { currentPage, postsPerPage, pageCount, pageNumbers2Display } = this.state;\r\n    //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\r\n    //cause its pointless to show extra buttons in this case scenarios\r\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\r\n    function getPageNumberList() {\r\n      const list = [];\r\n      if(shouldDisplayExtraButtons) {\r\n        let i = currentPage <= pageNumbers2Display ? 1 :\r\n              currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) :\r\n                currentPage - (Math.floor(pageNumbers2Display / 2));\r\n        let toNumber = i + pageNumbers2Display;\r\n        for (i; i < toNumber; i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      else {\r\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      return list;\r\n    }\r\n\r\n    const RenderPageNumbers = () => {\r\n      return (\r\n        getPageNumberList().map(number => {\r\n         return (\r\n           <li className={currentPage === number ? 'active' : ''} key={number} id={number} onClick={this.handleClick}>\r\n             <a href=\"#\">{number}</a>\r\n           </li>\r\n         );\r\n       })\r\n      );\r\n    }\r\n\r\n    class FirstPage extends React.Component {\r\n\t\t  render() {\r\n\r\n\t\t\tif((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n\r\n        return (\r\n          <li className = {currentPage === 1 ? ' active' : ''} key=\"f-page\" id=\"f-page\" onClick ={this.props.changeP} >\r\n            <a href=\"#\">1</a>\r\n          </li>\r\n        )\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t  }\r\n\t\t}\r\n\r\n\t\tFirstPage.propTypes = {\r\n\t\t  changeP: PropTypes.func\r\n\t\t};\r\n\r\n    class LastPage extends React.Component {\r\n\t\t  render() {\r\n  \t\t\tif((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n          return (\r\n            <li className = {currentPage === pageCount ? ' active' : ''} key=\"l-page\" id=\"l-page\" onClick ={this.props.changeP} >\r\n              <a href=\"#\">{pageCount}</a>\r\n            </li>\r\n          )\r\n  \t\t\t}\r\n  \t\t\telse\r\n  \t\t\t\treturn null;\r\n\t\t  }\r\n\t\t}\r\n\r\n\t\tLastPage.propTypes = {\r\n\t\t  changeP: PropTypes.func\r\n\t\t};\r\n\r\n    class StartDots extends React.Component {\r\n\t\t\trender() {\r\n\t\t\t\tif((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n          return (\r\n            <li key=\"sdots\"  id=\"sdots\" onClick ={this.props.changeP} >\r\n              <a href=\"#\">...</a>\r\n            </li>\r\n          )\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tStartDots.propTypes = {\r\n\t\t\tchangeP: PropTypes.func\r\n\t\t}\r\n\r\n\t\tclass EndDots extends React.Component {\r\n\t\t\trender() {\r\n\t\t\t\tif((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n          return (\r\n            <li key=\"edots\" id=\"edots\" onClick ={this.props.changeP} >\r\n              <a href=\"#\">...</a>\r\n            </li>\r\n          )\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t\tEndDots.propTypes = {\r\n\t\t\tchangeP: PropTypes.func\r\n\t\t}\r\n\r\n    if(this.state.pageCount > 1) {\r\n      return (\r\n        <div className=\"row\">\r\n          <ul className=\"pagination\">\r\n            {this.prevPage()}\r\n            <FirstPage changeP={this.props.changeP} />\r\n            <StartDots changeP={this.props.changeP} />\r\n            <RenderPageNumbers />\r\n            <EndDots changeP={this.props.changeP} />\r\n            <LastPage changeP={this.props.changeP} />\r\n            {this.nextPage()}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}