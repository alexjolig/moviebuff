{"ast":null,"code":"import { put, takeLatest, all } from 'redux-saga/effects';\nimport { API_KEY } from './globals';\nimport { updateMovies } from './actions';\n\nfunction* fetchNews() {\n  const json = yield fetch('https://api.themoviedb.org/3/search/movie?query=a&api_key=ccd60d653f56114f67fe5f13b2c82147&page=7') //'https://api.themoviedb.org/3/search/movie?query='+ finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage)\n  .then(response => response.json());\n  yield put({\n    type: \"updateMovies\",\n    json: json.results\n  });\n}\n\nfunction* actionWatcher() {\n  yield takeLatest('GET_NEWS', fetchNews);\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["E:\\MovieBuff_React-Redux\\src\\sagas.js"],"names":["put","takeLatest","all","API_KEY","updateMovies","fetchNews","json","fetch","then","response","type","results","actionWatcher","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,YAAR,QAA2B,WAA3B;;AAGA,UAAUC,SAAV,GAAsB;AACpB,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,mGAAD,CAAL,CAA0G;AAA1G,GACZC,IADY,CACPC,QAAQ,IAAIA,QAAQ,CAACH,IAAT,EADL,CAAnB;AAEA,QAAMN,GAAG,CAAC;AAAEU,IAAAA,IAAI,EAAE,cAAR;AAAwBJ,IAAAA,IAAI,EAAEA,IAAI,CAACK;AAAnC,GAAD,CAAT;AACD;;AAED,UAAUC,aAAV,GAA0B;AACxB,QAAMX,UAAU,CAAC,UAAD,EAAaI,SAAb,CAAhB;AACD;;AAED,eAAe,UAAUQ,QAAV,GAAqB;AACnC,QAAMX,GAAG,CAAC,CACVU,aAAa,EADH,CAAD,CAAT;AAGA","sourcesContent":["import { put, takeLatest, all } from 'redux-saga/effects';\r\nimport {API_KEY} from './globals';\r\nimport {updateMovies} from './actions';\r\n\r\n\r\nfunction* fetchNews() {\r\n  const json = yield fetch('https://api.themoviedb.org/3/search/movie?query=a&api_key=ccd60d653f56114f67fe5f13b2c82147&page=7')//'https://api.themoviedb.org/3/search/movie?query='+ finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage)\r\n        .then(response => response.json(), );\r\n  yield put({ type: \"updateMovies\", json: json.results, });\r\n}\r\n\r\nfunction* actionWatcher() {\r\n  yield takeLatest('GET_NEWS', fetchNews)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n yield all([\r\n actionWatcher(),\r\n ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}