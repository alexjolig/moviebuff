{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Search } from './main-search';\nimport './css/all.min.css';\nimport './css/fontawesome.min.css';\nimport './scss/App.scss'; // import './styles.css';\n//https://api.themoviedb.org/3/movie/550?api_key=ccd60d653f56114f67fe5f13b2c82147\n//https://api.themoviedb.org/3/list/10?api_key=ccd60d653f56114f67fe5f13b2c82147\n//https://api.themoviedb.org/3/search/movie?query=avengers&api_key=ccd60d653f56114f67fe5f13b2c82147&page=2\n// class Search extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       movieQuery: \"\",\n//     }\n//   }\n//   changeHandler = (event) => {\n//     this.setState ({\n//       movieQuery: event.target.value\n//     });\n//   }\n//   sendQuery = () => {\n//     this.props.parentCallback(this.state.movieQuery);\n//   }\n//   render() {\n//     return (\n//       <div className=\"search-container\">\n//         <input type=\"text\" name=\"search\" placeholder=\"Which movie you are looking for?\" onChange={(e) => {this.changeHandler(e)}}/>\n//         <button onClick={this.sendQuery} >Go Find It!</button>\n//       </div>\n//\n//     )\n//   }\n// }\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movies: [],\n      isAnyData: true,\n      finalQuery: this.props.query\n    };\n  }\n\n  getMovies() {\n    if (this.state.finalQuery === \"\") return;\n    fetch('https://api.themoviedb.org/3/search/movie?query=' + this.state.finalQuery + '&api_key=ccd60d653f56114f67fe5f13b2c82147').then(res => res.json()).then(data => {\n      this.setState({\n        movies: data.results\n      });\n      this.setState({\n        isAnyData: this.state.movies.length > 0\n      });\n    }).catch(console.log);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (previousState.finalQuery !== this.state.finalQuery) this.getMovies();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      finalQuery: props.query\n    };\n  }\n\n  render() {\n    if (this.state.isAnyData) return React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Release Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Favorite\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"To Watch\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.movies.map(row => React.createElement(\"tr\", {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, row.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, row.release_date), React.createElement(\"td\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-star\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: \"far fa-eye-slash\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })))))));else {\n      return React.createElement(\"div\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"No Results!\");\n    }\n  }\n\n}\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getMovieQuery = childData => {\n      this.setState({\n        parentQuery: childData\n      });\n    };\n\n    this.child = React.createRef();\n    this.state = {\n      parentQuery: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(Search, {\n      parentCallback: this.getMovieQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Table, {\n      query: this.state.parentQuery,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }));\n  }\n\n}\n\nReactDOM.render(React.createElement(Container, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 127\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["E:\\MovieBuff_React\\src\\index.js"],"names":["React","ReactDOM","Search","Table","Component","constructor","props","state","movies","isAnyData","finalQuery","query","getMovies","fetch","then","res","json","data","setState","results","length","catch","console","log","componentDidMount","componentDidUpdate","previousProps","previousState","getDerivedStateFromProps","render","map","row","id","title","release_date","Container","getMovieQuery","childData","parentQuery","child","createRef","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Search} from './main-search';\nimport './css/all.min.css';\nimport './css/fontawesome.min.css';\nimport './scss/App.scss';\n// import './styles.css';\n\n//https://api.themoviedb.org/3/movie/550?api_key=ccd60d653f56114f67fe5f13b2c82147\n//https://api.themoviedb.org/3/list/10?api_key=ccd60d653f56114f67fe5f13b2c82147\n//https://api.themoviedb.org/3/search/movie?query=avengers&api_key=ccd60d653f56114f67fe5f13b2c82147&page=2\n\n// class Search extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       movieQuery: \"\",\n//     }\n//   }\n//   changeHandler = (event) => {\n//     this.setState ({\n//       movieQuery: event.target.value\n//     });\n//   }\n//   sendQuery = () => {\n//     this.props.parentCallback(this.state.movieQuery);\n//   }\n//   render() {\n//     return (\n//       <div className=\"search-container\">\n//         <input type=\"text\" name=\"search\" placeholder=\"Which movie you are looking for?\" onChange={(e) => {this.changeHandler(e)}}/>\n//         <button onClick={this.sendQuery} >Go Find It!</button>\n//       </div>\n//\n//     )\n//   }\n// }\n\nclass Table extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n        movies: [],\n        isAnyData:true,\n        finalQuery: this.props.query,\n    }\n  }\n\n  getMovies() {\n    if(this.state.finalQuery === \"\") return;\n    fetch('https://api.themoviedb.org/3/search/movie?query='+ this.state.finalQuery + '&api_key=ccd60d653f56114f67fe5f13b2c82147')\n    .then(res => res.json())\n    .then((data) => {\n      this.setState({movies: data.results});\n      this.setState({isAnyData : this.state.movies.length > 0 });\n    })\n    .catch(console.log);\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if(previousState.finalQuery !== this.state.finalQuery)\n      this.getMovies();\n  }\n  static getDerivedStateFromProps(props, state) {\n    return{finalQuery: props.query};\n  }\n\n  render(){\n    if(this.state.isAnyData)\n      return (\n        <div className=\"table-container\">\n          <table>\n            <thead>\n              <tr>\n                <th>Title</th>\n                <th>Release Date</th>\n                <th>Favorite</th>\n                <th>To Watch</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.movies.map((row) => (\n              <tr key={row.id}>\n                <td>{row.title}</td>\n                <td>{row.release_date}</td>\n                <td className=\"icon\"><i className=\"far fa-star\"></i></td>\n                <td className=\"icon\"><i className=\"far fa-eye-slash\"></i></td>\n              </tr>\n\n            ))}\n            </tbody>\n          </table>\n        </div>\n      );\n    else {\n      return <div className=\"table-container\">No Results!</div>;\n    }\n  }\n}\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.child = React.createRef();\n    this.state = {\n      parentQuery:\"\",\n    }\n  }\n\n  getMovieQuery = (childData) => {\n    this.setState({parentQuery: childData});\n  }\n  render() {\n    return (\n      <div className=\"container\">\n        <Search parentCallback = {this.getMovieQuery}/>\n        <Table query={this.state.parentQuery} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<Container />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}