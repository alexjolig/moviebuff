{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React-Redux\\\\src\\\\table.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport addMovie from './globals';\nimport Pagination from './pagination';\nimport { FAV_MOVIE_LIST, TO_WATCH_MOVIE_LIST, API_KEY, movieExists } from './globals';\nimport { changePageCount, changeIsAnyData, updateMovies } from './actions';\nimport store from './store';\nimport fake_movies from './movies';\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    /*    this.state = {\r\n            movies: [],\r\n            isAnyData:false,\r\n            finalQuery: this.props.query,\r\n            currentPage: 1,\r\n        \t\tpageCount: 0,\r\n        }*/\n  }\n\n  getFakeMovies(movies) {\n    return movies.title.indexOf(store.getState().query) > -1;\n  }\n\n  getMovies() {\n    let _store$getState = store.getState(),\n        finalQuery = _store$getState.finalQuery,\n        movies = _store$getState.movies,\n        pageCount = _store$getState.pageCount,\n        isAnyData = _store$getState.isAnyData;\n\n    if (finalQuery === \"\") return;\n    /*fetch('movies.json')//'https://api.themoviedb.org/3/search/movie?query='+ finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      movies = data.results;\r\n      pageCount = data.total_pages;\r\n      isAnyData = movies.length > 0;\r\n      store.dispatch(updateMovies(movies));\r\n      store.dispatch(changePageCount(pageCount));\r\n      store.dispatch(changeIsAnyData(isAnyData));\r\n    })\r\n    .catch(console.log);\r\n    */\n\n    movies = fake_movies.results;\n    pageCount = fake_movies.total_pages;\n    isAnyData = movies.length > 0;\n    store.dispatch(updateMovies(movies.filter(this.getFakeMovies)));\n    store.dispatch(changePageCount(pageCount));\n    store.dispatch(changeIsAnyData(isAnyData));\n    console.log(store.getState());\n  }\n\n  componentDidMount() {\n    // const cPage = Number(sessionStorage.getItem(CURRENT_PAGE));\n    // this.setState({\n    //   currentPage: cPage ? cPage : 1\n    // }, ()=>{\n    //   //this.getMovies();\n    // })\n    console.log(store.getState());\n    this.getMovies();\n  }\n\n  componentDidUpdate(previousProps, previousState) {}\n  /*if(previousState.finalQuery !== this.state.finalQuery) {\r\n    this.setState({currentPage: 1}, ()=> { //get back to page number one when searching for a new movie\r\n      this.getMovies();\r\n    });\r\n  }\r\n  else if(previousState.currentPage !== this.state.currentPage){*/\n  //this.getMovies();\n  //}\n\n  /*static getDerivedStateFromProps(props, state) {\r\n    return{finalQuery: props.query};\r\n  }*/\n\n\n  addToList(id, title, relDate, list) {\n    addMovie(id, title, relDate, list);\n    this.forceUpdate();\n  }\n\n  render() {\n    console.log(\"render\");\n    if (store.getState().isAnyData) return React.createElement(\"div\", {\n      className: \"table-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Release Date\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Favorite\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"To Watch\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, store.getState().movies.map(row => React.createElement(\"tr\", {\n      key: row.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, row.title), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, row.release_date), React.createElement(\"td\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: (movieExists(row.id, FAV_MOVIE_LIST) ? \"fas\" : \"far\") + \" fa-star\",\n      onClick: () => {\n        this.addToList(row.id, row.title, row.release_date, FAV_MOVIE_LIST);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"td\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"i\", {\n      className: movieExists(row.id, TO_WATCH_MOVIE_LIST) ? \"fas fa-eye\" : \"far fa-eye-slash\",\n      onClick: () => {\n        this.addToList(row.id, row.title, row.release_date, TO_WATCH_MOVIE_LIST);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })))))), React.createElement(Pagination, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }));else {\n      return React.createElement(\"div\", {\n        className: \"table-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"no-results no-selection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Nothing To Watch!\"));\n    }\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["E:\\MovieBuff_React-Redux\\src\\table.js"],"names":["React","connect","addMovie","Pagination","FAV_MOVIE_LIST","TO_WATCH_MOVIE_LIST","API_KEY","movieExists","changePageCount","changeIsAnyData","updateMovies","store","fake_movies","Table","Component","constructor","props","getFakeMovies","movies","title","indexOf","getState","query","getMovies","finalQuery","pageCount","isAnyData","results","total_pages","length","dispatch","filter","console","log","componentDidMount","componentDidUpdate","previousProps","previousState","addToList","id","relDate","list","forceUpdate","render","map","row","release_date"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport addMovie from './globals';\r\nimport Pagination from './pagination';\r\nimport {FAV_MOVIE_LIST, TO_WATCH_MOVIE_LIST, API_KEY, movieExists} from './globals';\r\nimport {changePageCount, changeIsAnyData, updateMovies} from './actions';\r\nimport store from './store';\r\nimport fake_movies from './movies';\r\n\r\nclass Table extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n/*    this.state = {\r\n        movies: [],\r\n        isAnyData:false,\r\n        finalQuery: this.props.query,\r\n        currentPage: 1,\r\n    \t\tpageCount: 0,\r\n    }*/\r\n  }\r\n\r\n  getFakeMovies(movies) {\r\n    return movies.title.indexOf(store.getState().query) > -1;\r\n  }\r\n\r\n  getMovies() {\r\n    let {finalQuery, movies, pageCount, isAnyData} = store.getState();\r\n    if(finalQuery === \"\") return;\r\n\r\n    /*fetch('movies.json')//'https://api.themoviedb.org/3/search/movie?query='+ finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage)\r\n    .then(res => res.json())\r\n    .then((data) => {\r\n      movies = data.results;\r\n      pageCount = data.total_pages;\r\n      isAnyData = movies.length > 0;\r\n      store.dispatch(updateMovies(movies));\r\n      store.dispatch(changePageCount(pageCount));\r\n      store.dispatch(changeIsAnyData(isAnyData));\r\n    })\r\n    .catch(console.log);\r\n*/\r\n    movies = fake_movies.results;\r\n    pageCount = fake_movies.total_pages;\r\n    isAnyData = movies.length > 0;\r\n    store.dispatch(updateMovies(movies.filter(this.getFakeMovies)));\r\n    store.dispatch(changePageCount(pageCount));\r\n    store.dispatch(changeIsAnyData(isAnyData));\r\n    console.log(store.getState());\r\n  }\r\n\r\n  componentDidMount() {\r\n      // const cPage = Number(sessionStorage.getItem(CURRENT_PAGE));\r\n      // this.setState({\r\n      //   currentPage: cPage ? cPage : 1\r\n      // }, ()=>{\r\n      //   //this.getMovies();\r\n      // })\r\n      console.log(store.getState());\r\n      this.getMovies();\r\n\r\n  }\r\n\r\n  componentDidUpdate(previousProps, previousState) {\r\n    /*if(previousState.finalQuery !== this.state.finalQuery) {\r\n      this.setState({currentPage: 1}, ()=> { //get back to page number one when searching for a new movie\r\n        this.getMovies();\r\n      });\r\n    }\r\n    else if(previousState.currentPage !== this.state.currentPage){*/\r\n      //this.getMovies();\r\n    //}\r\n  }\r\n\r\n  /*static getDerivedStateFromProps(props, state) {\r\n    return{finalQuery: props.query};\r\n  }*/\r\n\r\n  addToList(id, title, relDate, list){\r\n    addMovie(id, title, relDate, list);\r\n    this.forceUpdate();\r\n  }\r\n\r\n  render(){\r\n    console.log(\"render\");\r\n    if(store.getState().isAnyData)\r\n      return (\r\n        <div className=\"table-container\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Title</th>\r\n                <th>Release Date</th>\r\n                <th>Favorite</th>\r\n                <th>To Watch</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {store.getState().movies.map((row) => (\r\n              <tr key={row.id}>\r\n                <td>{row.title}</td>\r\n                <td>{row.release_date}</td>\r\n                <td className=\"icon\"><i className={(movieExists(row.id, FAV_MOVIE_LIST) ? \"fas\" : \"far\") + \" fa-star\"} onClick={()=>{this.addToList(row.id, row.title, row.release_date, FAV_MOVIE_LIST)}}></i></td>\r\n                <td className=\"icon\"><i className={movieExists(row.id, TO_WATCH_MOVIE_LIST) ? \"fas fa-eye\" : \"far fa-eye-slash\"} onClick={()=>{this.addToList(row.id, row.title, row.release_date, TO_WATCH_MOVIE_LIST)}}></i></td>\r\n              </tr>\r\n            ))}\r\n            </tbody>\r\n          </table>\r\n          <Pagination />\r\n        </div>\r\n\r\n      );\r\n    else {\r\n      return (\r\n        <div className=\"table-container\">\r\n          <h2 className=\"no-results no-selection\">Nothing To Watch!</h2>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Table;\r\n"]},"metadata":{},"sourceType":"module"}