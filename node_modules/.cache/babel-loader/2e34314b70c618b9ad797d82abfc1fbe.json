{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React-Redux\\\\src\\\\pagination.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { changePage } from './actions';\n\nclass Pagination extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changePage = event => {\n      event.preventDefault();\n      const _this$props = this.props,\n            currentPage = _this$props.currentPage,\n            pageCount = _this$props.pageCount,\n            pageNumbers2Display = _this$props.pageNumbers2Display;\n      let newPage = 1;\n      let extraPages2Jump = 3;\n      let page2JumpFrom;\n\n      switch (event.currentTarget.id) {\n        case 'p-page':\n          //previous\n          newPage = currentPage > 1 ? currentPage - 1 : 1;\n          break;\n\n        case 'n-page':\n          //next\n          newPage = currentPage < pageCount ? currentPage + 1 : pageCount;\n          break;\n\n        case 'f-page':\n          //first\n          newPage = 1;\n          break;\n\n        case 'l-page':\n          //last\n          newPage = pageCount;\n          break;\n\n        case 'e-dots':\n          //last dots\n          page2JumpFrom = currentPage <= pageNumbers2Display ? pageNumbers2Display : currentPage + 2;\n          newPage = page2JumpFrom + extraPages2Jump <= pageCount ? page2JumpFrom + extraPages2Jump : currentPage;\n          break;\n\n        case 's-dots':\n          //first dots\n          page2JumpFrom = currentPage >= pageCount - (pageNumbers2Display - 1) ? pageCount - (pageNumbers2Display - 1) : currentPage - 2;\n          newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\n          break;\n\n        default:\n          // page numbers\n          newPage = Number(event.currentTarget.id);\n        //using event.target would reference to child tag (a). So use event.currentTarget\n      } //if(newPage === this.state.currentPage) return;\n\n\n      this.props.dispatch(changePage(newPage));\n    };\n  }\n\n  prevPage() {\n    return React.createElement(\"li\", {\n      key: \"p-page\",\n      id: \"p-page\",\n      onClick: this.changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"<\"));\n  }\n\n  nextPage() {\n    return React.createElement(\"li\", {\n      key: \"n-page\",\n      id: \"n-page\",\n      onClick: this.changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \">\"));\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          currentPage = _this$props2.currentPage,\n          pageCount = _this$props2.pageCount,\n          pageNumbers2Display = _this$props2.pageNumbers2Display; //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\n    //cause its pointless to show extra buttons in this case scenarios\n\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\n\n    function getPageNumberList() {\n      const list = [];\n\n      if (shouldDisplayExtraButtons) {\n        let i = currentPage <= pageNumbers2Display ? 1 : currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) : currentPage - Math.floor(pageNumbers2Display / 2);\n        let toNumber = i + pageNumbers2Display;\n\n        for (i; i < toNumber; i++) {\n          list.push(i);\n        }\n      } else {\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\n          list.push(i);\n        }\n      }\n\n      return list;\n    }\n\n    const RenderPageNumbers = () => {\n      return getPageNumberList().map(number => {\n        return React.createElement(\"li\", {\n          className: currentPage === number ? 'active' : '',\n          key: number,\n          id: number,\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, number));\n      });\n    };\n\n    const FirstPage = () => {\n      if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          className: currentPage === 1 ? ' active' : '',\n          key: \"f-page\",\n          id: \"f-page\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"1\"));\n      } else return null;\n    };\n\n    const LastPage = () => {\n      if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          className: currentPage === pageCount ? ' active' : '',\n          key: \"l-page\",\n          id: \"l-page\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, pageCount));\n      } else return null;\n    };\n\n    const StartDots = () => {\n      if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          key: \"sdots\",\n          id: \"s-dots\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, \"...\"));\n      } else return null;\n    };\n\n    const EndDots = () => {\n      if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          key: \"edots\",\n          id: \"e-dots\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, \"...\"));\n      } else return null;\n    };\n\n    if (pageCount > 1) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, this.prevPage(), React.createElement(FirstPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(StartDots, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(RenderPageNumbers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(EndDots, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(LastPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }), this.nextPage()));\n    } else return null;\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    pageCount: state.pageCount,\n    currentPage: state.currentPage,\n    pageNumbers2Display: state.pageNumbers2Display\n  };\n}\n\nexport default connect(mapStateToProps)(Pagination);","map":{"version":3,"sources":["E:\\MovieBuff_React-Redux\\src\\pagination.js"],"names":["React","connect","changePage","Pagination","Component","event","preventDefault","props","currentPage","pageCount","pageNumbers2Display","newPage","extraPages2Jump","page2JumpFrom","currentTarget","id","Number","dispatch","prevPage","nextPage","render","shouldDisplayExtraButtons","getPageNumberList","list","i","Math","floor","toNumber","push","ceil","RenderPageNumbers","map","number","FirstPage","LastPage","StartDots","EndDots","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,WAAzB;;AAEA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAGvCF,UAHuC,GAGzBG,KAAD,IAAW;AACtBA,MAAAA,KAAK,CAACC,cAAN;AADsB,0BAEkC,KAAKC,KAFvC;AAAA,YAEdC,WAFc,eAEdA,WAFc;AAAA,YAEDC,SAFC,eAEDA,SAFC;AAAA,YAEUC,mBAFV,eAEUA,mBAFV;AAGtB,UAAIC,OAAO,GAAG,CAAd;AACA,UAAIC,eAAe,GAAG,CAAtB;AACA,UAAIC,aAAJ;;AACA,cAAQR,KAAK,CAACS,aAAN,CAAoBC,EAA5B;AACE,aAAK,QAAL;AAAc;AACZJ,UAAAA,OAAO,GAAGH,WAAW,GAAG,CAAd,GAAkBA,WAAW,GAAG,CAAhC,GAAoC,CAA9C;AACF;;AACA,aAAK,QAAL;AAAc;AACZG,UAAAA,OAAO,GAAGH,WAAW,GAAGC,SAAd,GAA0BD,WAAW,GAAG,CAAxC,GAA4CC,SAAtD;AACF;;AACA,aAAK,QAAL;AAAc;AACZE,UAAAA,OAAO,GAAG,CAAV;AACF;;AACA,aAAK,QAAL;AAAc;AACZA,UAAAA,OAAO,GAAGF,SAAV;AACF;;AACA,aAAK,QAAL;AAAc;AACZI,UAAAA,aAAa,GAAGL,WAAW,IAAIE,mBAAf,GAAqCA,mBAArC,GAA2DF,WAAW,GAAG,CAAzF;AACAG,UAAAA,OAAO,GAAGE,aAAa,GAAGD,eAAhB,IAAmCH,SAAnC,GAA+CI,aAAa,GAAGD,eAA/D,GAAiFJ,WAA3F;AACF;;AACA,aAAK,QAAL;AAAe;AACbK,UAAAA,aAAa,GAAGL,WAAW,IAAIC,SAAS,IAAIC,mBAAmB,GAAG,CAA1B,CAAxB,GAAuDD,SAAS,IAAIC,mBAAmB,GAAG,CAA1B,CAAhE,GAAgGF,WAAW,GAAG,CAA9H;AACAG,UAAAA,OAAO,GAAGE,aAAa,GAAG,CAAhB,IAAqB,CAArB,GAAyBA,aAAa,GAAG,CAAzC,GAA6C,CAAvD;AACF;;AACA;AAAS;AACPF,UAAAA,OAAO,GAAGK,MAAM,CAACX,KAAK,CAACS,aAAN,CAAoBC,EAArB,CAAhB;AAA0C;AAtB9C,OANsB,CA8BtB;;;AACA,WAAKR,KAAL,CAAWU,QAAX,CAAoBf,UAAU,CAACS,OAAD,CAA9B;AACD,KAnCsC;AAAA;;AAqCvCO,EAAAA,QAAQ,GAAG;AACP,WACE;AAAI,MAAA,GAAG,EAAC,QAAR;AAAiB,MAAA,EAAE,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAE,KAAKhB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAKH;;AAEDiB,EAAAA,QAAQ,GAAG;AACT,WACE;AAAI,MAAA,GAAG,EAAC,QAAR;AAAiB,MAAA,EAAE,EAAC,QAApB;AAA6B,MAAA,OAAO,EAAE,KAAKjB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF;AAKD;;AAEDkB,EAAAA,MAAM,GAAE;AAAA,yBAEkD,KAAKb,KAFvD;AAAA,UAEEC,WAFF,gBAEEA,WAFF;AAAA,UAEeC,SAFf,gBAEeA,SAFf;AAAA,UAE0BC,mBAF1B,gBAE0BA,mBAF1B,EAGN;AACA;;AACA,UAAMW,yBAAyB,GAAGZ,SAAS,GAAGC,mBAAZ,IAAmCA,mBAArE;;AACA,aAASY,iBAAT,GAA6B;AAC3B,YAAMC,IAAI,GAAG,EAAb;;AACA,UAAGF,yBAAH,EAA8B;AAC5B,YAAIG,CAAC,GAAGhB,WAAW,IAAIE,mBAAf,GAAqC,CAArC,GACFF,WAAW,GAAGE,mBAAd,GAAoCD,SAApC,GAAgDA,SAAS,IAAIC,mBAAmB,GAAG,CAA1B,CAAzD,GACEF,WAAW,GAAIiB,IAAI,CAACC,KAAL,CAAWhB,mBAAmB,GAAG,CAAjC,CAFvB;AAGA,YAAIiB,QAAQ,GAAGH,CAAC,GAAGd,mBAAnB;;AACA,aAAKc,CAAL,EAAQA,CAAC,GAAGG,QAAZ,EAAsBH,CAAC,EAAvB,EAA2B;AACzBD,UAAAA,IAAI,CAACK,IAAL,CAAUJ,CAAV;AACD;AACF,OARD,MASK;AACH,aAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIC,IAAI,CAACI,IAAL,CAAUpB,SAAV,CAArB,EAA2Ce,CAAC,EAA5C,EAAgD;AAC9CD,UAAAA,IAAI,CAACK,IAAL,CAAUJ,CAAV;AACD;AACF;;AACD,aAAOD,IAAP;AACD;;AAED,UAAMO,iBAAiB,GAAG,MAAM;AAC9B,aACER,iBAAiB,GAAGS,GAApB,CAAwBC,MAAM,IAAI;AACjC,eACE;AAAI,UAAA,SAAS,EAAExB,WAAW,KAAKwB,MAAhB,GAAyB,QAAzB,GAAoC,EAAnD;AAAuD,UAAA,GAAG,EAAEA,MAA5D;AAAoE,UAAA,EAAE,EAAEA,MAAxE;AAAgF,UAAA,OAAO,EAAE,KAAK9B,UAA9F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAc8B,MAAd,CADF,CADF;AAKD,OANA,CADF;AASD,KAVD;;AAYA,UAAMC,SAAS,GAAG,MAAM;AACtB,UAAIzB,WAAW,GAAGE,mBAAf,IAAuCW,yBAA1C,EAAqE;AACnE,eACE;AAAI,UAAA,SAAS,EAAIb,WAAW,KAAK,CAAhB,GAAoB,SAApB,GAAgC,EAAjD;AAAqD,UAAA,GAAG,EAAC,QAAzD;AAAkE,UAAA,EAAE,EAAC,QAArE;AAA8E,UAAA,OAAO,EAAG,KAAKN,UAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKJ,OANE,MAQF,OAAO,IAAP;AACC,KAVD;;AAYA,UAAMgC,QAAQ,GAAG,MAAM;AACtB,UAAI1B,WAAW,GAAGC,SAAS,IAAIC,mBAAmB,GAAG,CAA1B,CAAxB,IAAyDW,yBAA5D,EAAuF;AAClF,eACE;AAAI,UAAA,SAAS,EAAIb,WAAW,KAAKC,SAAhB,GAA4B,SAA5B,GAAwC,EAAzD;AAA6D,UAAA,GAAG,EAAC,QAAjE;AAA0E,UAAA,EAAE,EAAC,QAA7E;AAAsF,UAAA,OAAO,EAAG,KAAKP,UAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAcO,SAAd,CADF,CADF;AAKJ,OAND,MAQC,OAAO,IAAP;AACH,KAVC;;AAYA,UAAM0B,SAAS,GAAG,MAAM;AACtB,UAAI3B,WAAW,GAAGE,mBAAf,IAAuCW,yBAA1C,EAAqE;AACnE,eACE;AAAI,UAAA,GAAG,EAAC,OAAR;AAAgB,UAAA,EAAE,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAG,KAAKnB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD,OAND,MAQE,OAAO,IAAP;AACH,KAVD;;AAYA,UAAMkC,OAAO,GAAG,MAAM;AACpB,UAAI5B,WAAW,GAAGC,SAAS,IAAIC,mBAAmB,GAAG,CAA1B,CAAxB,IAAyDW,yBAA5D,EAAuF;AACrF,eACE;AAAI,UAAA,GAAG,EAAC,OAAR;AAAgB,UAAA,EAAE,EAAC,QAAnB;AAA4B,UAAA,OAAO,EAAG,KAAKnB,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAC,IAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAKD,OAND,MAQE,OAAO,IAAP;AACH,KAVD;;AAYA,QAAGO,SAAS,GAAG,CAAf,EAAkB;AAChB,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKS,QAAL,EADH,EAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EAKE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAME,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAOG,KAAKC,QAAL,EAPH,CADF,CADF;AAaD,KAdD,MAgBE,OAAO,IAAP;AACH;;AA3JsC;;AA8JzC,SAASkB,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACL7B,IAAAA,SAAS,EAAE6B,KAAK,CAAC7B,SADZ;AAELD,IAAAA,WAAW,EAAE8B,KAAK,CAAC9B,WAFd;AAGLE,IAAAA,mBAAmB,EAAE4B,KAAK,CAAC5B;AAHtB,GAAP;AAKD;;AAED,eAAeT,OAAO,CAACoC,eAAD,CAAP,CAAyBlC,UAAzB,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {changePage} from './actions';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  //Handle next and previous buttons\r\n  changePage = (event) => {\r\n    event.preventDefault();\r\n    const { currentPage, pageCount, pageNumbers2Display } = this.props;\r\n    let newPage = 1;\r\n    let extraPages2Jump = 3;\r\n    let page2JumpFrom;\r\n    switch (event.currentTarget.id){\r\n      case 'p-page'://previous\r\n        newPage = currentPage > 1 ? currentPage - 1 : 1;\r\n      break;\r\n      case 'n-page'://next\r\n        newPage = currentPage < pageCount ? currentPage + 1 : pageCount;\r\n      break;\r\n      case 'f-page'://first\r\n        newPage = 1;\r\n      break;\r\n      case 'l-page'://last\r\n        newPage = pageCount;\r\n      break;\r\n      case 'e-dots'://last dots\r\n        page2JumpFrom = currentPage <= pageNumbers2Display ? pageNumbers2Display : currentPage + 2;\r\n        newPage = page2JumpFrom + extraPages2Jump <= pageCount ? page2JumpFrom + extraPages2Jump : currentPage;\r\n      break;\r\n      case 's-dots': //first dots\r\n        page2JumpFrom = currentPage >= pageCount - (pageNumbers2Display - 1) ? pageCount - (pageNumbers2Display - 1) :  currentPage - 2;\r\n        newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\r\n      break;\r\n      default: // page numbers\r\n        newPage = Number(event.currentTarget.id); //using event.target would reference to child tag (a). So use event.currentTarget\r\n    }\r\n    //if(newPage === this.state.currentPage) return;\r\n    this.props.dispatch(changePage(newPage));\r\n  }\r\n\r\n  prevPage() {\r\n      return (\r\n        <li key=\"p-page\" id=\"p-page\" onClick={this.changePage}>\r\n          <a href=\"/#\">&lt;</a>\r\n        </li>\r\n      )\r\n  }\r\n\r\n  nextPage() {\r\n    return (\r\n      <li key=\"n-page\" id=\"n-page\" onClick={this.changePage}>\r\n        <a href=\"/#\">&gt;</a>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const { currentPage, pageCount, pageNumbers2Display } = this.props;\r\n    //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\r\n    //cause its pointless to show extra buttons in this case scenarios\r\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\r\n    function getPageNumberList() {\r\n      const list = [];\r\n      if(shouldDisplayExtraButtons) {\r\n        let i = currentPage <= pageNumbers2Display ? 1 :\r\n              currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) :\r\n                currentPage - (Math.floor(pageNumbers2Display / 2));\r\n        let toNumber = i + pageNumbers2Display;\r\n        for (i; i < toNumber; i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      else {\r\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      return list;\r\n    }\r\n\r\n    const RenderPageNumbers = () => {\r\n      return (\r\n        getPageNumberList().map(number => {\r\n         return (\r\n           <li className={currentPage === number ? 'active' : ''} key={number} id={number} onClick={this.changePage}>\r\n             <a href=\"/#\">{number}</a>\r\n           </li>\r\n         );\r\n       })\r\n      );\r\n    }\r\n\r\n    const FirstPage = () => {\r\n      if((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n        return (\r\n          <li className = {currentPage === 1 ? ' active' : ''} key=\"f-page\" id=\"f-page\" onClick ={this.changePage} >\r\n            <a href=\"/#\">1</a>\r\n          </li>\r\n        )\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n    }\r\n\r\n    const LastPage = () => {\r\n  \t\t\tif((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n          return (\r\n            <li className = {currentPage === pageCount ? ' active' : ''} key=\"l-page\" id=\"l-page\" onClick ={this.changePage} >\r\n              <a href=\"/#\">{pageCount}</a>\r\n            </li>\r\n          )\r\n  \t\t\t}\r\n  \t\t\telse\r\n  \t\t\t\treturn null;\r\n\t\t}\r\n\r\n    const StartDots = () => {\r\n      if((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n        return (\r\n          <li key=\"sdots\" id=\"s-dots\" onClick ={this.changePage} >\r\n            <a href=\"/#\">...</a>\r\n          </li>\r\n        )\r\n      }\r\n      else\r\n        return null;\r\n    }\r\n\r\n    const EndDots = () => {\r\n      if((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n        return (\r\n          <li key=\"edots\" id=\"e-dots\" onClick ={this.changePage} >\r\n            <a href=\"/#\">...</a>\r\n          </li>\r\n        )\r\n      }\r\n      else\r\n        return null;\r\n    }\r\n\r\n    if(pageCount > 1) {\r\n      return (\r\n        <div className=\"row\">\r\n          <ul className=\"pagination\">\r\n            {this.prevPage()}\r\n            <FirstPage />\r\n            <StartDots />\r\n            <RenderPageNumbers />\r\n            <EndDots />\r\n            <LastPage />\r\n            {this.nextPage()}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pageCount: state.pageCount,\r\n    currentPage: state.currentPage,\r\n    pageNumbers2Display: state.pageNumbers2Display\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Pagination);\r\n"]},"metadata":{},"sourceType":"module"}