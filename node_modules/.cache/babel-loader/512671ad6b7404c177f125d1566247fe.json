{"ast":null,"code":"import { put, takeLatest, all } from 'redux-saga/effects';\nimport { API_KEY } from './globals';\nimport { UPDATE_MOVIES, REFRESH_MOVIES } from './actions';\n\nfunction* fetchMovies() {\n  const json = yield fetch('https://api.themoviedb.org/3/search/movie?query=' + 'a' + '&api_key=' + API_KEY + '&page=' + 7) //'https://api.themoviedb.org/3/search/movie?query='+ finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage)\n  .then(response => response.json());\n  yield put({\n    type: UPDATE_MOVIES,\n    json: json\n  });\n}\n\nfunction* actionWatcher() {\n  yield takeLatest(REFRESH_MOVIES, fetchMovies);\n}\n\nexport default function* rootSaga() {\n  yield all([actionWatcher()]);\n}","map":{"version":3,"sources":["E:\\MovieBuff_React-Redux\\src\\sagas.js"],"names":["put","takeLatest","all","API_KEY","UPDATE_MOVIES","REFRESH_MOVIES","fetchMovies","json","fetch","then","response","type","actionWatcher","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,SAAQC,OAAR,QAAsB,WAAtB;AACA,SAAQC,aAAR,EAAuBC,cAAvB,QAA4C,WAA5C;;AAGA,UAAUC,WAAV,GAAwB;AACtB,QAAMC,IAAI,GAAG,MAAMC,KAAK,CAAC,qDAAqD,GAArD,GAA2D,WAA3D,GAAyEL,OAAzE,GAAmF,QAAnF,GAA8F,CAA/F,CAAL,CAAsG;AAAtG,GACZM,IADY,CACPC,QAAQ,IAAIA,QAAQ,CAACH,IAAT,EADL,CAAnB;AAEA,QAAMP,GAAG,CAAC;AAAEW,IAAAA,IAAI,EAAEP,aAAR;AAAuBG,IAAAA,IAAI,EAAEA;AAA7B,GAAD,CAAT;AACD;;AAED,UAAUK,aAAV,GAA0B;AACxB,QAAMX,UAAU,CAACI,cAAD,EAAiBC,WAAjB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AACjC,QAAMX,GAAG,CAAC,CACRU,aAAa,EADL,CAAD,CAAT;AAGF","sourcesContent":["import { put, takeLatest, all } from 'redux-saga/effects';\r\nimport {API_KEY} from './globals';\r\nimport {UPDATE_MOVIES, REFRESH_MOVIES} from './actions';\r\n\r\n\r\nfunction* fetchMovies() {\r\n  const json = yield fetch('https://api.themoviedb.org/3/search/movie?query=' + 'a' + '&api_key=' + API_KEY + '&page=' + 7)//'https://api.themoviedb.org/3/search/movie?query='+ finalQuery + '&api_key=' + API_KEY + \"&page=\" + currentPage)\r\n        .then(response => response.json(), );\r\n  yield put({ type: UPDATE_MOVIES, json: json, });\r\n}\r\n\r\nfunction* actionWatcher() {\r\n  yield takeLatest(REFRESH_MOVIES, fetchMovies)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n   yield all([\r\n     actionWatcher(),\r\n   ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}