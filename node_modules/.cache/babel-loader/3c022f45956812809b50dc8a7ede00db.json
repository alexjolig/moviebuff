{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React\\\\src\\\\pagination.js\";\nimport React from 'react';\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: this.props.currentPage,\n      postsPerPage: 20,\n      //It has been set from the used API, Nothing I can modify\n      pageCount: this.props.pageCount,\n      pageNumbers2Display: 5 //Set an odd number > 1\n\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          postsPerPage = _this$state.postsPerPage,\n          pageCount = _this$state.pageCount,\n          pageNumbers2Display = _this$state.pageNumbers2Display; //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\n    //cause its pointless to show extra buttons in this case scenarios\n\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\n\n    function getPageNumberList() {\n      const list = [];\n\n      if (shouldDisplayExtraButtons) {\n        let i = currentPage <= pageNumbers2Display ? 1 : currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) : currentPage - Math.floor(pageNumbers2Display / 2);\n        let toNumber = i + pageNumbers2Display;\n\n        for (i; i < toNumber; i++) {\n          list.push(i);\n        }\n      } else {\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\n          list.push(i);\n        }\n      }\n\n      return list;\n    }\n\n    function PrevPage() {\n      return React.createElement(\"li\", {\n        key: \"p-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"<\"));\n    } // /        {/* onClick: this.changePage */}\n\n\n    function NextPage() {\n      return React.createElement(\"li\", {\n        key: \"n-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \">\"));\n    }\n\n    function RenderPageNumbers() {\n      return getPageNumberList().map(number => {\n        return React.createElement(\"li\", {\n          className: currentPage === number ? 'active' : '',\n          key: number,\n          id: number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, number));\n      });\n    }\n\n    class FirstPage extends React.Component {\n      render() {\n        if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n          return React.createElement(\"li\", {\n            className: currentPage === 1 ? ' active' : '',\n            key: \"f-page\",\n            onclick: this.props.changeP,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74\n            },\n            __self: this\n          }, React.createElement(\"a\", {\n            href: \"#\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }, \"1\"));\n        } else return null;\n      }\n\n    }\n\n    FirstPage.propTypes = {\n      changeP: PropTypes.func\n    };\n\n    if (this.state.pageCount > 1) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(PrevPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(RenderPageNumbers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(NextPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      })));\n    } else return null;\n  }\n\n}\n\nexport default Pagination;","map":{"version":3,"sources":["E:\\MovieBuff_React\\src\\pagination.js"],"names":["React","Pagination","Component","constructor","props","state","currentPage","postsPerPage","pageCount","pageNumbers2Display","render","shouldDisplayExtraButtons","getPageNumberList","list","i","Math","floor","toNumber","push","ceil","PrevPage","NextPage","RenderPageNumbers","map","number","FirstPage","changeP","propTypes","PropTypes","func"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: this.props.currentPage,\r\n      postsPerPage: 20, //It has been set from the used API, Nothing I can modify\r\n      pageCount: this.props.pageCount,\r\n      pageNumbers2Display: 5, //Set an odd number > 1\r\n    }\r\n  }\r\n\r\n\r\n  render(){\r\n\r\n    const { currentPage, postsPerPage, pageCount, pageNumbers2Display } = this.state;\r\n    //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\r\n    //cause its pointless to show extra buttons in this case scenarios\r\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\r\n    function getPageNumberList() {\r\n      const list = [];\r\n      if(shouldDisplayExtraButtons) {\r\n        let i = currentPage <= pageNumbers2Display ? 1 :\r\n              currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) :\r\n                currentPage - (Math.floor(pageNumbers2Display / 2));\r\n        let toNumber = i + pageNumbers2Display;\r\n        for (i; i < toNumber; i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      else {\r\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      return list;\r\n    }\r\n\r\n    function PrevPage() {\r\n      return (\r\n        <li key=\"p-page\">\r\n          <a href=\"#\">&lt;</a>\r\n        </li>\r\n      )\r\n    }\r\n    // /        {/* onClick: this.changePage */}\r\n    function NextPage() {\r\n      return (\r\n        <li key=\"n-page\">\r\n          <a href=\"#\">&gt;</a>\r\n        </li>\r\n      )\r\n    }\r\n\r\n    function RenderPageNumbers() {\r\n      return (\r\n        getPageNumberList().map(number => {\r\n         return (\r\n           <li className={currentPage === number ? 'active' : ''} key={number} id={number}>\r\n             <a href=\"#\">{number}</a>\r\n           </li>\r\n         );\r\n       })\r\n      );\r\n    }\r\n\r\n    class FirstPage extends React.Component {\r\n\t\t  render() {\r\n\r\n\t\t\tif((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n\r\n        return (\r\n          <li className = {currentPage === 1 ? ' active' : ''} key=\"f-page\" onclick ={this.props.changeP} >\r\n            <a href=\"#\">1</a>\r\n          </li>\r\n        )\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t  }\r\n\t\t}\r\n\r\n\t\tFirstPage.propTypes = {\r\n\t\t  changeP: PropTypes.func\r\n\t\t};\r\n\r\n    if(this.state.pageCount > 1) {\r\n      return (\r\n        <div className=\"row\">\r\n          <ul className=\"pagination\">\r\n            <PrevPage />\r\n            <RenderPageNumbers />\r\n            <NextPage />\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}