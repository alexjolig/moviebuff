{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React-Redux\\\\src\\\\pagination.js\";\nimport React from 'react';\nimport { changePage, changePageCount, changeIsAnyData, addToFavourites, addToWatchList, updateMovies } from './actions';\nimport store from './store';\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n    /*      currentPage: this.props.currentPage,\r\n          postsPerPage: 20, //It has been set from the used API, Nothing I can modify\r\n          pageCount: this.props.pageCount,\r\n          pageNumbers2Display: 5, //Set an odd number > 1\r\n        }\r\n        this.changePage = this.changePage.bind(this);*/\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    return {\n      pageCount: props.pageCount,\n      currentPage: props.currentPage\n    };\n  } //Handle next and previous buttons\n\n\n  changePage(event) {\n    event.preventDefault();\n    let newPage = 1;\n    let extraPages2Jump = 3;\n    let page2JumpFrom;\n\n    switch (event.currentTarget.id) {\n      case 'p-page':\n        //previous\n        newPage = this.state.currentPage > 1 ? this.state.currentPage - 1 : 1;\n        break;\n\n      case 'n-page':\n        //next\n        newPage = this.state.currentPage < this.state.pageCount ? this.state.currentPage + 1 : this.state.pageCount;\n        break;\n\n      case 'f-page':\n        //first\n        newPage = 1;\n        break;\n\n      case 'l-page':\n        //last\n        newPage = this.state.pageCount;\n        break;\n\n      case 'e-dots':\n        //last dots\n        page2JumpFrom = this.state.currentPage <= this.state.pageNumbers2Display ? this.state.pageNumbers2Display : this.state.currentPage + 2;\n        newPage = page2JumpFrom + extraPages2Jump <= this.state.pageCount ? page2JumpFrom + extraPages2Jump : this.state.currentPage;\n        break;\n\n      case 's-dots':\n        //first dots\n        page2JumpFrom = this.state.currentPage >= this.state.pageCount - (this.state.pageNumbers2Display - 1) ? this.state.pageCount - (this.state.pageNumbers2Display - 1) : this.state.currentPage - 2;\n        newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\n        break;\n\n      default:\n        // page numbers\n        newPage = Number(event.currentTarget.id);\n      //using event.target would reference to child tag (a). So use event.currentTarget\n    } //if(newPage === this.state.currentPage) return;\n\n\n    this.setState({\n      currentPage: newPage\n    }, () => {\n      this.props.parentCallback(newPage);\n    });\n  }\n\n  prevPage() {\n    return React.createElement(\"li\", {\n      key: \"p-page\",\n      id: \"p-page\",\n      onClick: this.changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"<\"));\n  }\n\n  nextPage() {\n    return React.createElement(\"li\", {\n      key: \"n-page\",\n      id: \"n-page\",\n      onClick: this.changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \">\"));\n  }\n\n  render() {\n    const _this$state = this.state,\n          currentPage = _this$state.currentPage,\n          pageCount = _this$state.pageCount,\n          pageNumbers2Display = _this$state.pageNumbers2Display; //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\n    //cause its pointless to show extra buttons in this case scenarios\n\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\n\n    function getPageNumberList() {\n      const list = [];\n\n      if (shouldDisplayExtraButtons) {\n        let i = currentPage <= pageNumbers2Display ? 1 : currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) : currentPage - Math.floor(pageNumbers2Display / 2);\n        let toNumber = i + pageNumbers2Display;\n\n        for (i; i < toNumber; i++) {\n          list.push(i);\n        }\n      } else {\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\n          list.push(i);\n        }\n      }\n\n      return list;\n    }\n\n    const RenderPageNumbers = () => {\n      return getPageNumberList().map(number => {\n        return React.createElement(\"li\", {\n          className: currentPage === number ? 'active' : '',\n          key: number,\n          id: number,\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }, number));\n      });\n    };\n\n    const FirstPage = () => {\n      if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          className: currentPage === 1 ? ' active' : '',\n          key: \"f-page\",\n          id: \"f-page\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, \"1\"));\n      } else return null;\n    };\n\n    const LastPage = () => {\n      if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          className: currentPage === pageCount ? ' active' : '',\n          key: \"l-page\",\n          id: \"l-page\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, pageCount));\n      } else return null;\n    };\n\n    const StartDots = () => {\n      if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          key: \"sdots\",\n          id: \"s-dots\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, \"...\"));\n      } else return null;\n    };\n\n    const EndDots = () => {\n      if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n        return React.createElement(\"li\", {\n          key: \"edots\",\n          id: \"e-dots\",\n          onClick: this.changePage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"/#\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        }, \"...\"));\n      } else return null;\n    };\n\n    if (this.state.pageCount > 1) {\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: \"pagination\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, this.prevPage(), React.createElement(FirstPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(StartDots, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(RenderPageNumbers, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }), React.createElement(EndDots, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(LastPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }), this.nextPage()));\n    } else return null;\n  }\n\n}\n\nexport default Pagination;","map":{"version":3,"sources":["E:\\MovieBuff_React-Redux\\src\\pagination.js"],"names":["React","changePage","changePageCount","changeIsAnyData","addToFavourites","addToWatchList","updateMovies","store","Pagination","Component","constructor","props","getDerivedStateFromProps","state","pageCount","currentPage","event","preventDefault","newPage","extraPages2Jump","page2JumpFrom","currentTarget","id","pageNumbers2Display","Number","setState","parentCallback","prevPage","nextPage","render","shouldDisplayExtraButtons","getPageNumberList","list","i","Math","floor","toNumber","push","ceil","RenderPageNumbers","map","number","FirstPage","LastPage","StartDots","EndDots"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {changePage, changePageCount, changeIsAnyData, addToFavourites, addToWatchList, updateMovies} from './actions';\r\nimport store from './store';\r\n\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n/*      currentPage: this.props.currentPage,\r\n      postsPerPage: 20, //It has been set from the used API, Nothing I can modify\r\n      pageCount: this.props.pageCount,\r\n      pageNumbers2Display: 5, //Set an odd number > 1\r\n    }\r\n    this.changePage = this.changePage.bind(this);*/\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return{pageCount: props.pageCount, currentPage: props.currentPage};\r\n  }\r\n\r\n  //Handle next and previous buttons\r\n  changePage (event) {\r\n    event.preventDefault();\r\n    let newPage = 1;\r\n    let extraPages2Jump = 3;\r\n    let page2JumpFrom;\r\n    switch (event.currentTarget.id){\r\n      case 'p-page'://previous\r\n        newPage = this.state.currentPage > 1 ? this.state.currentPage - 1 : 1;\r\n      break;\r\n      case 'n-page'://next\r\n        newPage = this.state.currentPage < this.state.pageCount ? this.state.currentPage + 1 : this.state.pageCount;\r\n      break;\r\n      case 'f-page'://first\r\n        newPage = 1;\r\n      break;\r\n      case 'l-page'://last\r\n        newPage = this.state.pageCount;\r\n      break;\r\n      case 'e-dots'://last dots\r\n        page2JumpFrom = this.state.currentPage <= this.state.pageNumbers2Display ? this.state.pageNumbers2Display : this.state.currentPage + 2;\r\n        newPage = page2JumpFrom + extraPages2Jump <= this.state.pageCount ? page2JumpFrom + extraPages2Jump : this.state.currentPage;\r\n      break;\r\n      case 's-dots': //first dots\r\n        page2JumpFrom = this.state.currentPage >= this.state.pageCount - (this.state.pageNumbers2Display - 1) ? this.state.pageCount - (this.state.pageNumbers2Display - 1) :  this.state.currentPage - 2;\r\n        newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\r\n      break;\r\n      default: // page numbers\r\n        newPage = Number(event.currentTarget.id); //using event.target would reference to child tag (a). So use event.currentTarget\r\n    }\r\n    //if(newPage === this.state.currentPage) return;\r\n    this.setState({\r\n      currentPage: newPage\r\n    },() => {\r\n        this.props.parentCallback(newPage);\r\n    });\r\n  }\r\n\r\n  prevPage() {\r\n      return (\r\n        <li key=\"p-page\" id=\"p-page\" onClick={this.changePage}>\r\n          <a href=\"/#\">&lt;</a>\r\n        </li>\r\n      )\r\n  }\r\n\r\n  nextPage() {\r\n    return (\r\n      <li key=\"n-page\" id=\"n-page\" onClick={this.changePage}>\r\n        <a href=\"/#\">&gt;</a>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  render(){\r\n\r\n    const { currentPage, pageCount, pageNumbers2Display } = this.state;\r\n    //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\r\n    //cause its pointless to show extra buttons in this case scenarios\r\n    const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\r\n    function getPageNumberList() {\r\n      const list = [];\r\n      if(shouldDisplayExtraButtons) {\r\n        let i = currentPage <= pageNumbers2Display ? 1 :\r\n              currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) :\r\n                currentPage - (Math.floor(pageNumbers2Display / 2));\r\n        let toNumber = i + pageNumbers2Display;\r\n        for (i; i < toNumber; i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      else {\r\n        for (let i = 1; i <= Math.ceil(pageCount); i++) {\r\n          list.push(i);\r\n        }\r\n      }\r\n      return list;\r\n    }\r\n\r\n    const RenderPageNumbers = () => {\r\n      return (\r\n        getPageNumberList().map(number => {\r\n         return (\r\n           <li className={currentPage === number ? 'active' : ''} key={number} id={number} onClick={this.changePage}>\r\n             <a href=\"/#\">{number}</a>\r\n           </li>\r\n         );\r\n       })\r\n      );\r\n    }\r\n\r\n    const FirstPage = () => {\r\n      if((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n        return (\r\n          <li className = {currentPage === 1 ? ' active' : ''} key=\"f-page\" id=\"f-page\" onClick ={this.changePage} >\r\n            <a href=\"/#\">1</a>\r\n          </li>\r\n        )\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n    }\r\n\r\n    const LastPage = () => {\r\n  \t\t\tif((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n          return (\r\n            <li className = {currentPage === pageCount ? ' active' : ''} key=\"l-page\" id=\"l-page\" onClick ={this.changePage} >\r\n              <a href=\"/#\">{pageCount}</a>\r\n            </li>\r\n          )\r\n  \t\t\t}\r\n  \t\t\telse\r\n  \t\t\t\treturn null;\r\n\t\t}\r\n\r\n    const StartDots = () => {\r\n      if((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n        return (\r\n          <li key=\"sdots\" id=\"s-dots\" onClick ={this.changePage} >\r\n            <a href=\"/#\">...</a>\r\n          </li>\r\n        )\r\n      }\r\n      else\r\n        return null;\r\n    }\r\n\r\n    const EndDots = () => {\r\n      if((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n        return (\r\n          <li key=\"edots\" id=\"e-dots\" onClick ={this.changePage} >\r\n            <a href=\"/#\">...</a>\r\n          </li>\r\n        )\r\n      }\r\n      else\r\n        return null;\r\n    }\r\n\r\n    if(this.state.pageCount > 1) {\r\n      return (\r\n        <div className=\"row\">\r\n          <ul className=\"pagination\">\r\n            {this.prevPage()}\r\n            <FirstPage />\r\n            <StartDots />\r\n            <RenderPageNumbers />\r\n            <EndDots />\r\n            <LastPage />\r\n            {this.nextPage()}\r\n          </ul>\r\n        </div>\r\n      );\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}